plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('dd_MM_yy')
    return formattedDate
}

android {
    compileSdk 32
    def appVersionName = (System.getenv("APP_VERSION_NUMBER") as String) ?: "1.1"
    def appVersionCode = System.getenv("BUILD_NUMBER") as Integer ?: 420

    defaultConfig {
        applicationId "com.myratech.firebasertdapplication"
        minSdk 23
        targetSdk 32
        versionCode appVersionCode
        versionName appVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    flavorDimensions "version"
    productFlavors {
        dev {
            dimension "version"
            applicationIdSuffix ".dev"
            resValue "string", "app_name", "Dev FirebaseRTDApplication"
        }
        qa {
            dimension "version"
            applicationIdSuffix ".qa"
            resValue "string", "app_name", "QA FirebaseRTDApplication"
        }
        production {
            dimension "version"
            resValue "string", "app_name", "FirebaseRTDApplication"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        android.applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def fileFormat = "FirebaseRTDApplication"
                if (productFlavors.name.contains("dev")) {
                    fileFormat = fileFormat + "_Dev"
                } else if (productFlavors.name.contains("qa")) {
                    fileFormat = fileFormat + "_QA"
                } else {
                    fileFormat = fileFormat + "_PD"
                }
                fileFormat = fileFormat + "_VC_" + "${defaultConfig.versionCode}"
                fileFormat = fileFormat + "_VN_" + defaultConfig.versionName
                fileFormat = fileFormat + "_" + getDate()
                if (variant.buildType.name == "release") {
                    fileFormat += "_release.apk"
                } else {
                    fileFormat += ".apk"
                }
                output.outputFileName = fileFormat
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.5.0-alpha04'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.2'
    implementation 'com.google.firebase:firebase-crashlytics-ktx:18.2.11'
    implementation 'com.google.firebase:firebase-analytics-ktx:21.0.0'
    implementation 'com.google.firebase:firebase-database-ktx:20.0.5'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}